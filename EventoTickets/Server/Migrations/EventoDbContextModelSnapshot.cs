// <auto-generated />
using System;
using EventoTickets.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EventoTickets.Server.Migrations
{
    [DbContext(typeof(EventoDbContext))]
    partial class EventoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("EventoTickets.Shared.Evento", b =>
                {
                    b.Property<string>("EventoId")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("DataRealizacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("EventoPadrao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeEvento")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("EventoId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("EventoTickets.Shared.Talao", b =>
                {
                    b.Property<string>("TalaoId")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("DATE");

                    b.Property<string>("EventoId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("NumeroFinal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumeroInicial")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumeroTalao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResponsavelTalao")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("TalaoId");

                    b.HasIndex("EventoId", "NumeroTalao")
                        .IsUnique();

                    b.ToTable("Taloes");
                });

            modelBuilder.Entity("EventoTickets.Shared.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataConfirmacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("EventoId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("NumeroTicket")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TalaoId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("TicketId");

                    b.HasIndex("EventoId");

                    b.HasIndex("Status");

                    b.HasIndex("TalaoId");

                    b.HasIndex("EventoId", "NumeroTicket")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("EventoTickets.Shared.Talao", b =>
                {
                    b.HasOne("EventoTickets.Shared.Evento", "Evento")
                        .WithMany("Taloes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("EventoTickets.Shared.Ticket", b =>
                {
                    b.HasOne("EventoTickets.Shared.Evento", "Evento")
                        .WithMany("Tickets")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventoTickets.Shared.Talao", "Talao")
                        .WithMany("Tickets")
                        .HasForeignKey("TalaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Talao");
                });

            modelBuilder.Entity("EventoTickets.Shared.Evento", b =>
                {
                    b.Navigation("Taloes");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("EventoTickets.Shared.Talao", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
