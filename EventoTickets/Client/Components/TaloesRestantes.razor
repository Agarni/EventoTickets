@using EventoTickets.Shared
@using MudBlazor;

<h4>Talões restantes</h4>
@if (taloesRestantes?.Count > 0)
{
    @foreach (Talao talao in taloesRestantes)
    {
        <MudPaper Elevation="1" Style=@($"background-color:{((@talao.NumeroInicial % 2 == 0) ? Colors.Blue.Lighten4 : Colors.Blue.Lighten5)};margin:5px") Outlined="true">
            <MudGrid>
                <MudItem xs="3" md="3">
                    <MudText Align="Align.Center"><strong>@talao.ResponsavelTalao</strong></MudText>
                    <MudText Align="Align.Center">Talão: @talao.NumeroTalao</MudText>
                </MudItem>
                <MudItem xs="9" md="9">
                    <MudPaper Class="d-flex flex-wrap px-2" Elevation="0"
                        Style=@($"background-color:{((@talao.NumeroInicial % 2 == 0) ? Colors.Blue.Lighten4 : Colors.Blue.Lighten5)}")>
                        @foreach (var item in @talao.Tickets)
                        {
                            <MudChip T="int" Class="pa-1 ma-1" Style="@($"background:{Colors.Blue.Default};color:#fff;width:75px; text-align:center;")">
                                @item.NumeroTicket
                            </MudChip>
                        }
                    </MudPaper>
                </MudItem>
            </MudGrid>
        </MudPaper>
    }
}
else
{
    <MudAlert Severity="Severity.Info">Todos talões já foram entregues</MudAlert>
}

@code {
    [Parameter]
    public List<Ticket> Tickets { get; set; }

    private List<Talao> taloesRestantes
    {
        get
        {
            var taloes = new List<Talao>();
            var tickets = Tickets?.Where(t => t.Status == StatusTicket.EmAberto &&
                !string.IsNullOrWhiteSpace(t.Talao?.ResponsavelTalao))?.ToList();
            string responsavel = null;
            Talao talao = new Talao();
            int i = 0;

            if (Tickets != null)
            {
                foreach (var ticket in tickets.OrderBy(x => x.Talao.ResponsavelTalao).ThenBy(n => n.NumeroTicket).ToList())
                {
                    if (responsavel != $"{ticket.Talao.NumeroTalao}|{ticket.Talao.ResponsavelTalao}")
                    {
                        responsavel = $"{ticket.Talao.NumeroTalao}|{ticket.Talao.ResponsavelTalao}";
                        talao = new Talao
                        {
                            NumeroTalao = ticket.Talao.NumeroTalao,
                            ResponsavelTalao = ticket.Talao.ResponsavelTalao,
                            NumeroInicial = i++
                        };

                        taloes.Add(talao);
                    }

                    if (talao.Tickets == null)
                        talao.Tickets = new List<Ticket>();

                    talao.Tickets.Add(ticket);
                }
            }

            return taloes;
        }
    }
}
