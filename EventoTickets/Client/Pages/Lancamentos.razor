@page "/lancamentos"

@implements IAsyncDisposable
@using System.Text.Encodings.Web
@using EventoTickets.Client.Components
@using EventoTickets.Shared
@using Microsoft.AspNetCore.SignalR.Client
@using MudBlazor;
@using Toolbelt.Blazor.HotKeys2

@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject ISnackbar Snackbar
@inject HotKeys HotKeys

<style>
	.tooltip {
	}

	.tooltip .tooltiptext {
		visibility: hidden;
		width: 120px;
		background-color: black;
		color: #fff;
		text-align: center;
		border-radius: 6px;
		padding: 5px 0;
		position: absolute;
		z-index: 1;
		bottom: 150%;
		left: 50%;
		margin-left: -60px;
	}

	.tooltip .tooltiptext::after {
		content: "";
		position: absolute;
		top: 100%;
		left: 50%;
		margin-left: -5px;
		border-width: 5px;
		border-style: solid;
		border-color: black transparent transparent transparent;
	}

	.tooltip:hover .tooltiptext {
		visibility: visible;
	}
</style>

<MudCard>
	<MudCardHeader>
		<h2>Lançamentos</h2>
	</MudCardHeader>
	<MudCardContent>
		@if (evento == null)
		{
			<MudSkeleton/>
			<MudSkeleton Animation="Animation.False"/>
			<MudSkeleton Animation="Animation.Wave"/>
		}
		else if (string.IsNullOrWhiteSpace(evento?.EventoId))
		{
			<MudAlert Severity="Severity.Warning" Variant="Variant.Filled">Evento não encontrado/cadastrado ou não
				definido
				como padrão
			</MudAlert>
		}
		else
		{
			if (tickets == null)
			{
				<MudSkeleton/>
				<MudSkeleton Animation="Animation.False"/>
				<MudSkeleton Animation="Animation.Wave"/>
			}
			else if (tickets.Count == 0)
			{
				<MudAlert Severity="Severity.Info">Fichas ainda não foram geradas</MudAlert>
			}
			else
			{
				<section class="containerLanctos">
					<div class="item" id="fichas">
						<div>
							<div>
								<MudTextField T="string" Label="Data da realização" ReadOnly="true"
								              Variant="Variant.Outlined"
								              Text="@evento.DataRealizacao.ToString()" Style="width:200px;"/>
							</div>
							<div>
								<EditForm Model="@lancamento">
									<div class="lancamentos">
										<div class="numeroFicha">
											<MudNumericField @ref="_fichaInicial" T="int" Label="Ficha inicial"
											                 Style="max-width:150px;"
											                 @bind-Value="numeroTicket" Required="true"
											                 Min="@tickets.Min(x => x.NumeroTicket)"
											                 Max="@tickets.Max(x => x.NumeroTicket)"
											                 MaxLength="@tickets.Max(x => x.NumeroTicket).ToString().Length"/>
										</div>
										<div class="numeroFicha">
											<MudTooltip Text="(Ctrl + Shift + E) Para ativar/desativar ficha final">
												<MudNumericField T="int" Label="Ficha final" Style="max-width:150px;"
												                 Disabled="@_fichaFinalDesativada" @ref="_fichaFinal"
												                 @bind-Value="lancamento.FichaFinal"/>
											</MudTooltip>
										</div>
										<div>
											<MudButtonGroup OverrideStyles="false" Style="bottom:0;">
												<MudButton Variant="Variant.Filled" Color="Color.Primary"
												           style="vertical-align:bottom;" ButtonType="ButtonType.Submit"
												           OnClick="@LancarTicket">Lançar
												</MudButton>
												<MudButton Variant="Variant.Filled" Color="Color.Secondary"
												           Class="align-self-center"
												           OnClick="@DevolverTicket">Devolver
												</MudButton>
												<MudButton Variant="Variant.Filled" Color="Color.Error"
												           Class="align-self-center"
												           OnClick="@ReabrirTicket">Reabrir
												</MudButton>
											</MudButtonGroup>
										</div>
										<div>
										<span
											style="margin-left: 5px;">@((MarkupString)_ultimoLancamento.ToString())</span>
										</div>
									</div>
								</EditForm>
							</div>
							<div class="fichas">
								@foreach (var ticket in tickets.Where(x => x.Status != StatusTicket.Entregue &&
								                                           x.Status != StatusTicket.Avulso).ToList())
								{
									<MudTooltip Text="@(ticket.Talao?.ResponsavelTalao)">
										<MudPaper Elevation="0" Outlined="true"
										          Style="@($"background-color:{@CorTicket(ticket)};padding:2px;min-width:45px;margin:2px;text-align:center;cursor:pointer")">
											@ticket.NumeroTicket
										</MudPaper>
									</MudTooltip>
								}
							</div>
						</div>
					</div>
					<div class="item" id="painel">
						<div id="resumo">
							<ResumoFichas ListaTickets="@tickets"/>
						</div>
					</div>
				</section>
			}
		}
	</MudCardContent>
</MudCard>